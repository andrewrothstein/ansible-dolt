---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Checking for existing install in {{ dolt_install_ver_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ dolt_install_ver_dir }}'
  changed_when: false
  register: dolt_binary
- name: Downloading and installing dolt
  when: not dolt_binary.stat.exists
  block:
    - name: Downloading {{ dolt_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ dolt_url }}'
        dest: '{{ dolt_tmp_ltgz }}'
        mode: '644'
        checksum: '{{ dolt_checksum }}'
    - name: Mkdir {{ dolt_install_ver_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ dolt_install_ver_dir }}'
        state: directory
        mode: '755'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchive {{ dolt_tmp_ltgz }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ dolt_tmp_ltgz }}'
        dest: '{{ dolt_install_ver_dir }}'
        creates: '{{ dolt_bin_dir }}'
  always:
    - name: Rm {{ dolt_tmp_ltgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ dolt_tmp_ltgz }}'
        state: absent
- name: Linking items in {{ dolt_parent_install_dir }}/bin to items in {{ dolt_bin_dir }}
  become: true
  become_user: root
  with_items:
    - dolt
  ansible.builtin.file:
    src: '{{ dolt_bin_dir }}/{{ item }}'
    dest: '{{ dolt_parent_install_dir }}/bin/{{ item }}'
    state: link
